version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - kafka-net
    restart: always

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    networks:
      - kafka-net
    restart: always

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: library
      POSTGRES_USER: java
      POSTGRES_PASSWORD: java
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - kafka-net
    restart: always

  demo:
    build:
      context: ./demo
      dockerfile: Dockerfile
    depends_on:
      - postgres
      - kafka
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/library
      SPRING_DATASOURCE_USERNAME: java
      SPRING_DATASOURCE_PASSWORD: java
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "8080:8080"
    networks:
      - kafka-net
    restart: always

  consumeremail:
    build:
      context: ./consumer-email
      dockerfile: Dockerfile
    depends_on:
      - kafka
      - demo
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_KAFKA_CONSUMER_GROUP_ID: 2
      SPRING_KAFKA_CONSUMER_CLIENT_ID: consumer-email-1
      SPRING_MAIL_HOST: smtp.gmail.com
      SPRING_MAIL_PORT: 587
      SPRING_MAIL_USERNAME: johny.tester.azaza.123@gmail.com
      SPRING_MAIL_PASSWORD: gejd mykn nyzr fcok
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH: "true"
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE: "true"
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_SSL_TRUST: smtp.gmail.com
    ports:
      - "8111:91"
    networks:
      - kafka-net
    restart: always

  consumer:
    build:
      context: ./consumer-telegram
      dockerfile: Dockerfile
    depends_on:
      - postgres
      - kafka
      - demo
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/library
      SPRING_DATASOURCE_USERNAME: java
      SPRING_DATASOURCE_PASSWORD: java
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_KAFKA_CONSUMER_GROUP_ID: 1
      SPRING_KAFKA_CONSUMER_CLIENT_ID: consumer-telegram-1
    ports:
      - "8112:90"
    networks:
      - kafka-net
    restart: always

volumes:
  pgdata:

networks:
  kafka-net:
    driver: bridge
